{"version":3,"sources":["assets/icons/spinner.svg","assets/icons/close.svg","assets/icons/cog.svg","components/joke-card/JokeCard.js","components/joke-error/JokeError.js","components/spinner/Spinner.js","components/modal/Modal.js","components/App.js","api/JokeAPI.js","lib/utils.js","actions/jokeActions.js","actions/appActions.js","actions/modalActions.js","containers/AppContainer.js","serviceWorker.js","reducers/appReducer.js","reducers/jokeReducer.js","reducers/modalReducer.js","reducers/index.js","localStorage.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","JokeCard","_ref","text","children","react_default","a","createElement","className","JokeError","error","defaultProps","Spinner","show","src","spinner","alt","Modal","open","title","handleClose","stateClass","concat","onClick","e","stopPropagation","close","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","heroInput","React","createRef","handleClick","bind","assertThisInitialized","handleSettingClick","handleModalClose","handleChange","fetchRandomJoke","joke","isLoading","openModal","value","current","changeAppHero","closeModal","style","borderColor","_this$props$joke","randomJoke","components_joke_error_JokeError","components_spinner_Spinner","components_joke_card_JokeCard","cog","hero","app","isOpen","modal","components_modal_Modal","type","defaultValue","ref","renderJoke","renderSettingBar","renderModal","Component","axios","require","JokeAPI","API_URL","get","then","data","Promise","resolve","decodeURIComponent","reject","catch","Error","replace","str","searchValue","replaceValue","regExp","RegExp","FETCH_RANDOM_JOKE","FETCH_RANDOM_JOKE_SUCCESS","FETCH_RANDOM_JOKE_FAILURE","CHANGE_RANDOM_JOKE_HERO","CHANGE_APP_HERO","newHero","dispatch","getState","oldHero","changeRandomJokeHero","OPEN_MODAL","CLOSE_MODAL","AppContainer","connect","state","asyncToGenerator","regenerator_default","mark","_callee","_getState","message","wrap","_context","prev","next","sent","t0","stop","_x","_x2","apply","arguments","Boolean","window","location","hostname","match","defaultHero","initialState","appReducer","length","undefined","action","objectSpread","jokeReducer","modalReducer","rootReducer","combineReducers","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","applyMiddleware","thunkMiddleware","subscribe","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","Date","now","throttle","stringify","setItem","console","saveState","ReactDOM","render","es","containers_AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24162a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8cde2f6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.629b03c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/cog.c952e3bb.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JokeCard.css';\n\nconst JokeCard = ({ text, children }) => {\n  return (\n    <h1 className=\"JokeCard\">\n      {children} <span>{text}</span>\n    </h1>\n  );\n}\n\nJokeCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  children: PropTypes.element\n};\n\nexport default JokeCard;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JokeError.css';\n\nconst JokeError = ({ error, children }) => {\n  return (\n    <h2 className=\"JokeError\">\n      {children} <span>{error}</span>\n    </h2>\n  );\n}\n\nJokeError.propTypes = {\n  error: PropTypes.string,\n  children: PropTypes.element\n};\n\nJokeError.defaultProps = {\n  error: 'Something went wrong!',\n};\n\nexport default JokeError;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport spinner from '../../assets/icons/spinner.svg';\n\nimport './Spinner.css';\n\nconst Spinner = ({ show }) => {\n  if (show) {\n    return (\n      <div className=\"Spinner\">\n        <img src={spinner} className=\"Spinner-icon\" alt=\"spinner\" />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nSpinner.propTypes = {\n  show: PropTypes.bool\n};\n\nSpinner.defaultProps = {\n  show: false\n};\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nimport close from '../../assets/icons/close.svg';\n\nconst Modal = ({ open, title, handleClose, children }) => {\n  const stateClass = open ? 'open' : 'close';\n\n  return (\n    <div className={`Modal ${stateClass}`} onClick={(e) => e.stopPropagation()}>\n      <section className=\"Modal-content\">\n        <header className=\"Modal-content-header\">\n          <span>{title}</span>\n          <div className=\"Modal-close\" onClick={handleClose}>\n            <img src={close} className=\"Modal-close-icon\" alt=\"close\"/>\n          </div>\n        </header>\n        <div className=\"Modal-content-body\">\n          {children}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  handleClose: PropTypes.func\n};\n\nModal.defaultProps = {\n  open: false,\n  title: 'Modal Header',\n  handleClose: () => {}\n};\n\nexport default Modal;","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport JokeCard from './joke-card/JokeCard';\nimport JokeError from './joke-error/JokeError';\nimport Spinner from './spinner/Spinner';\nimport Modal from './modal/Modal';\nimport cog from '../assets/icons/cog.svg';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.heroInput = React.createRef();\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSettingClick = this.handleSettingClick.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchRandomJoke();\n  }\n\n  handleClick(e) {\n    if (!this.props.joke.isLoading) {\n      this.props.fetchRandomJoke();\n    }\n  }\n\n  handleSettingClick(e) {\n    e.stopPropagation();\n    this.props.openModal();\n  }\n\n  handleChange(e) {\n    const { value } = this.heroInput.current;\n\n    if (value) {\n      this.props.changeAppHero(value);\n      this.props.closeModal();\n      this.heroInput.current.style.borderColor = '#dddddd';\n    } else {\n      this.heroInput.current.style.borderColor = '#f44336';\n    }\n  }\n\n  handleModalClose() {\n    this.props.closeModal();\n  }\n\n  renderJoke() {\n    const { randomJoke, isLoading, error } = this.props.joke;\n\n    if (error) {\n      return (\n        <JokeError error={error}>\n          <Spinner show={isLoading}/>\n        </JokeError>\n      );\n    }\n\n    return (\n      <JokeCard text={randomJoke || ''}>\n        <Spinner show={isLoading}/>\n      </JokeCard>\n    );\n  }\n\n  renderSettingBar() {\n    const { error } = this.props.joke;\n\n    if (error) return null;\n\n    return (\n      <aside className=\"App-setting-bar\">\n        <button className=\"App-button\" onClick={this.handleSettingClick}>\n          <img src={cog} className=\"App-button-icon\" alt=\"cog\"/>\n        </button>\n      </aside>\n    );\n  }\n\n  renderModal() {\n    const { hero } = this.props.app;\n    const { isOpen } = this.props.modal;\n\n    return (\n      <Modal open={isOpen} title={'Joke Hero'} handleClose={this.handleModalClose}>\n        <div className=\"App-hero-form\">\n          <input type=\"text\" className=\"App-hero-input\" defaultValue={hero} ref={this.heroInput}/>\n          <button className=\"App-button App-hero-button\" onClick={this.handleChange}>Save</button>\n        </div>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <main className=\"App\" onClick={this.handleClick}>\n        {this.renderJoke()}\n        {this.renderSettingBar()}\n        {this.renderModal()}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const axios = require('axios');\n\nexport const JokeAPI = (function JokeAPI() {\n  const API_URL = 'https://api.icndb.com';\n  const API_HERO = 'Chuck Norris';\n\n  function fetchRandomJoke() {\n    return axios.get(`${API_URL}/jokes/random?escape=javascript`)\n      .then(({ data }) => {\n        return (data && data.type === 'success')\n          ? Promise.resolve(decodeURIComponent(data.value.joke))\n          : Promise.reject();\n      })\n      .catch(() => {\n        throw new Error('Could not fetch a random joke =(');\n      });\n  }\n\n  return {\n    hero: API_HERO,\n    fetchRandomJoke\n  };\n})();","// https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf\n\n/**\n * Creates a throttled function that only invokes `func` at most once per every `limit` milliseconds\n *\n * @param {Function} func\n * @param {number} limit\n */\nexport function throttle(func, limit) {\n  let lastFunc;\n  let lastRan;\n\n  return function() {\n    const context = this;\n    const args = arguments;\n\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n\n      lastFunc = setTimeout(function() {\n        if ((Date.now() - lastRan) >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  }\n}\n\n/**\n * Replaces text in a string, using search string\n *\n * @param {string} str\n * @param {string} searchValue\n * @param {string} replaceValue\n */\nexport function replace(str, searchValue, replaceValue) {\n  const regExp = new RegExp(searchValue, 'g');\n  return str.replace(regExp, replaceValue);\n}\n","import { JokeAPI } from '../api/JokeAPI';\nimport { replace } from '../lib/utils';\n\nexport const FETCH_RANDOM_JOKE = 'FETCH_RANDOM_JOKE';\nexport const FETCH_RANDOM_JOKE_SUCCESS = 'FETCH_RANDOM_JOKE_SUCCESS';\nexport const FETCH_RANDOM_JOKE_FAILURE = 'FETCH_RANDOM_JOKE_FAILURE';\nexport const CHANGE_RANDOM_JOKE_HERO = 'CHANGE_RANDOM_JOKE_HERO';\n\nexport function fetchRandomJoke() {\n  return async (dispatch, getState) => {\n    const { app } = getState();\n\n    dispatch({ type: FETCH_RANDOM_JOKE });\n\n    try {\n      const randomJoke = await JokeAPI.fetchRandomJoke();\n\n      dispatch({\n        type: FETCH_RANDOM_JOKE_SUCCESS,\n        randomJoke: replace(randomJoke, JokeAPI.hero, app.hero)\n      });\n    } catch ({ message }) {\n      dispatch({\n        type: FETCH_RANDOM_JOKE_FAILURE,\n        error: message\n      });\n    }\n  };\n}\n\nexport function changeRandomJokeHero(oldHero, newHero) {\n  return { type: CHANGE_RANDOM_JOKE_HERO, oldHero, newHero };\n}","import { changeRandomJokeHero } from \"./jokeActions\";\n\nexport const CHANGE_APP_HERO = 'CHANGE_APP_HERO';\n\nexport function changeAppHero(newHero) {\n  return (dispatch, getState) => {\n    const oldHero = getState().app.hero;\n\n    dispatch({ type: CHANGE_APP_HERO, hero: newHero });\n    dispatch(changeRandomJokeHero(oldHero, getState().app.hero));\n  };\n}","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport function openModal() {\n  return { type: OPEN_MODAL };\n}\n\nexport function closeModal() {\n  return { type: CLOSE_MODAL };\n}","import { connect } from 'react-redux';\n\nimport App from \"../components/App\";\nimport {\n  fetchRandomJoke,\n  changeAppHero,\n  openModal,\n  closeModal\n} from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  app: state.app,\n  joke: state.joke,\n  modal: state.modal\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRandomJoke: () => dispatch(fetchRandomJoke()),\n    changeAppHero: (hero) => dispatch(changeAppHero(hero)),\n    openModal: () => dispatch(openModal()),\n    closeModal: () => dispatch(closeModal())\n  }\n}\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CHANGE_APP_HERO } from '../actions';\nimport { JokeAPI } from '../api/JokeAPI';\n\nconst defaultHero = JokeAPI.hero;\n\nconst initialState = {\n  hero: defaultHero\n};\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_APP_HERO:\n      return { ...state, hero: action.hero || defaultHero };\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","import {\n  FETCH_RANDOM_JOKE,\n  FETCH_RANDOM_JOKE_SUCCESS,\n  FETCH_RANDOM_JOKE_FAILURE,\n  CHANGE_RANDOM_JOKE_HERO\n} from '../actions';\nimport { replace } from '../lib/utils';\n\nconst initialState = {\n  randomJoke: null,\n  isLoading: false,\n  error: null\n};\n\nfunction jokeReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_RANDOM_JOKE:\n      return {\n        ...state,\n        isLoading: true\n      };\n\n    case FETCH_RANDOM_JOKE_SUCCESS:\n      return {\n        ...state,\n        randomJoke: action.randomJoke,\n        error: null,\n        isLoading: false\n      };\n\n    case FETCH_RANDOM_JOKE_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false\n      };\n\n    case CHANGE_RANDOM_JOKE_HERO:\n      return {\n        ...state,\n        randomJoke: replace(state.randomJoke, action.oldHero, action.newHero)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default jokeReducer;","import { OPEN_MODAL, CLOSE_MODAL } from '../actions';\n\nconst initialState = {\n  isOpen: false\n};\n\nfunction modalReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return { ...state, isOpen: true };\n\n    case CLOSE_MODAL:\n      return { ...state, isOpen: false };\n\n    default:\n      return state;\n  }\n}\n\nexport default modalReducer;","import { combineReducers } from 'redux';\n\nimport appReducer from './appReducer';\nimport jokeReducer from './jokeReducer';\nimport modalReducer from './modalReducer';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  joke: jokeReducer,\n  modal: modalReducer\n});\n\nexport default rootReducer;","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch(err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch(err) {\n    console.error(err.message || 'Something went wrong!');\n  }\n};","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from '../reducers';\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware)\n  );\n\n  return store\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\n\nimport AppContainer from './containers/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store'\nimport { loadState, saveState } from './localStorage';\nimport { throttle } from './lib/utils';\n\nconst preloadedState = loadState();\nconst store = configureStore(preloadedState);\n\n// Write to the localStorage at most once a second\nstore.subscribe(throttle(() => {\n  saveState({\n    app: store.getState().app\n  });\n}, 1000));\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}